pipeline {
    agent any

    environment {

        // –ò–º—è —Ü–µ–ª–µ–≤–æ–π –≤–µ—Ç–∫–∏
        TARGET_BRANCH = 'develop'

        // –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è GitHub API
        GITHUB_REPO = 'CrmProject2025/Infra'
        GITHUB_TOKEN = credentials('github-token') // –¢–æ–∫–µ–Ω GitHub (–¥–æ–±–∞–≤—å—Ç–µ –≤ Jenkins Credentials)
    }

    stages {
        // –≠—Ç–∞–ø 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–¥–∞ –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
        // stage('merge') {
        //     steps {
        //       sh '''
        //             git clone https://github.com/CrmProject2025/Infra.git
        //             cd Infra
        //             git checkout develop
        //         '''

        //     }
        // }

        stage('Fetch Branches') {
            steps {
                bat "git fetch origin" // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–µ—Ç–∫–∞—Ö
            }
        }

        // –≠—Ç–∞–ø 2: –ú–µ—Ä–¥–∂ –≤–µ—Ç–∫–∏ feature –≤ develop
        stage('Merge with Develop') {
            steps {
                script {
                    // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –≤–µ—Ç–∫—É develop
                    // sh "git checkout ${TARGET_BRANCH}"
                    // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –≤–µ—Ç–∫—É develop
                    bat "git pull origin ${TARGET_BRANCH}"
                    // –ú–µ—Ä–¥–∂–∏–º feature –≤ develop
                    bat "git merge origin/${env.CHANGE_BRANCH}"
                }
            }
        }

        // –≠—Ç–∞–ø 3: –°–±–æ—Ä–∫–∞ Docker-–æ–±—Ä–∞–∑–æ–≤
        stage('Build Docker Images') {
            steps {
                bat "docker-compose up -d --build"
            }
        }

        // –≠—Ç–∞–ø 4: –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
        // stage('Run Tests') {
        //     steps {
        //         sh "${DOCKER_COMPOSE} up -d"
        //         // –ü—Ä–∏–º–µ—Ä: –∑–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –¥–ª—è —Å–µ—Ä–≤–∏—Å–∞ "user-service"
        //         sh "${DOCKER_COMPOSE} exec -T user-service ./mvnw test"
        //     }s
        // }
    }

       post {
        success {
            script {
                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤ PR —á–µ—Ä–µ–∑ PowerShell
                bat """
                    powershell -Command "
                    Invoke-RestMethod -Uri 'https://api.github.com/repos/${GITHUB_REPO}/issues/${env.CHANGE_ID}/comments' \
                    -Method POST \
                    -Headers @{Authorization='token ${GITHUB_TOKEN}'; Accept='application/vnd.github.v3+json'} \
                    -Body '{\"body\": \"üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ! PR –≥–æ—Ç–æ–≤ –∫ —Ä—É—á–Ω–æ–º—É —Å–ª–∏—è–Ω–∏—é.\"}'
                    "
                """
            }
        }
       failure {
            script {
                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤ PR —á–µ—Ä–µ–∑ PowerShell
                bat """
                    powershell -Command "
                    Invoke-RestMethod -Uri 'https://api.github.com/repos/${GITHUB_REPO}/issues/${env.CHANGE_ID}/comments' \
                    -Method POST \
                    -Headers @{Authorization='token ${GITHUB_TOKEN}'; Accept='application/vnd.github.v3+json'} \
                    -Body '{\"body\": \"‚ùå –¢–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—à–∏–±–∫–∏.\"}'
                    "
                """
            }
       }


    // –ü–æ—Å—Ç–æ–±—Ä–∞–±–æ—Ç–∫–∞

        always {
            // –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
            bat "docker-compose down"
        }
        cleanup {
            // –û—á–∏—Å—Ç–∫–∞ workspace
            cleanWs()
        }
    


}
}
